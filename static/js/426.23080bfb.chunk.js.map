{"version":3,"file":"static/js/426.23080bfb.chunk.js","mappings":"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","sources":["components/RegistrationForm/RegistrationForm.styled.jsx","components/RegistrationForm/RegistrationForm.jsx","pages/Registration/Register.jsx"],"sourcesContent":["import { styled } from \"styled-components\";\n\nimport { NavLink } from \"react-router-dom\";\n\nexport const Wrapper = styled.div`\n    width: 350px;\n    border: 1px solid #2c3d50;\n    margin: 120px auto  0;\n    border-radius: 6px;\n    padding: 40px 60px;\n`\n\nexport const Title = styled.p`\n    text-align: center;\n    color: #1abc9c;\n    font-size: 26px;\n    font-weight: 700;\n    margin-bottom:  30px;\n\n`\nexport const FormElement = styled.form`\n    display: flex;\n    flex-direction: column;\n    gap: 30px;\n`\n\nexport const Field = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n`\nexport const LabelElement = styled.label`\n    color: #2c3d50;\n    opacity: 0.7;   \n    font-size: 14px;\n    font-weight: 500;\n`\nexport const InputElement = styled.input`\nborder: none;\n    border-bottom: 1px solid #2c3d50;\n    height: 35px;\n    padding-left: 18px;\n    outline: none; \n    ::placeholder {\n        color: #8795a1;  \n        opacity: 0.7;   \n        font-size: 12px;\n    }\n    &:focus {\n        border-color:#18a287; \n    }\n`\nexport const ButtonElement = styled.button`\n    padding: 12px 0;\n    border: none;\n    background-color: #1abc9c;\n    border-radius: 4px;\n    color: #fff;\n    font-weight: 500;\n    transition: all 0.3s ease;\n    &:hover{    \n        color: #fff;\n        background-color: #18a287;\n    }\n`\nexport const DivElement = styled.div`\n    display: flex;\n    justify-content: center;\n    gap: 4px;\n`\nexport const PElement = styled.p`\n    font-size: 16px;\n    color: #2c3d50;\n`\nexport const StyledNavLink = styled(NavLink)`\n    color: #1abc9c;\n    font-weight: 500;\n    transition: all 0.3s ease;\n    &:hover{    \n        color: #18a287;\n    }\n`\n","import {\n    Wrapper,\n    Title,\n    FormElement,\n    Field,\n    LabelElement,\n    InputElement,\n    ButtonElement,\n    DivElement,\n    PElement,\n    StyledNavLink\n} from \"./RegistrationForm.styled\";\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { toast } from 'react-toastify';\n\nimport Container from \"components/Container/Container\";\n\nimport { registerUser } from \"../../redux/auth/authOperations\";\nimport { selectError } from \"../../redux/auth/authSelecotrs\";\n\nimport { clearError } from \"../../redux/auth/authSlice\";\n\nimport { useEffect } from \"react\";\n\nconst RegistrationForm = () => {\n    const dispatch = useDispatch();\n    const getError = useSelector(selectError);\n\n\n    const handleSubmit = async evt => {\n        evt.preventDefault();\n\n        const form = evt.currentTarget;\n        try {\n            dispatch(\n                registerUser({\n                    name: form.elements.name.value.trim(),\n                    email: form.elements.email.value.trim(),\n                    password: form.elements.password.value.trim(),\n                })\n            );\n            form.reset();\n        } catch (error) {\n            console.log(error.message);\n        }\n    };\n\n    useEffect(() => {\n        if (getError) {\n            toast.error(`${getError}`, {\n                position: 'top-center',\n                autoClose: 3000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n                theme: \"light\",\n            });\n        }\n\n        dispatch(clearError());\n    }, [getError, dispatch]);\n\n    return (\n        <Container>\n            <Wrapper>\n                <Title>Please Register</Title>\n                <FormElement onSubmit={handleSubmit} >\n                    <Field>\n                        <LabelElement>\n                            Name:\n                        </LabelElement>\n                        <InputElement type=\"text\" name=\"name\" required />\n                    </Field>\n                    <Field>\n                        <LabelElement>\n                            Email:\n                        </LabelElement>\n                        <InputElement type=\"email\" name=\"email\" required />\n                    </Field>\n                    <Field>\n                        <LabelElement>\n                            Password:\n                        </LabelElement>\n                        <InputElement type=\"password\" name=\"password\" required />\n                    </Field>\n                    <ButtonElement type=\"submit\">Submit</ButtonElement>\n                    <DivElement><PElement>Do you have an account?</PElement><StyledNavLink to='/login'>Login Now</StyledNavLink></DivElement>\n                </FormElement>\n            </Wrapper>\n        </Container>\n    )\n}\n\nexport default RegistrationForm;\n","import RegistrationForm from \"components/RegistrationForm/RegistrationForm\"\n\nconst Register = () => {\n    return (\n        <RegistrationForm />\n    )\n}\n\nexport default Register;"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","FormElement","_templateObject3","Field","_templateObject4","LabelElement","_templateObject5","InputElement","_templateObject6","ButtonElement","_templateObject7","DivElement","_templateObject8","PElement","_templateObject9","StyledNavLink","NavLink","_templateObject10","dispatch","useDispatch","getError","useSelector","selectError","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","evt","form","_context","prev","next","preventDefault","currentTarget","registerUser","name","elements","value","trim","email","password","reset","error","console","log","message","stop","_x","apply","arguments","useEffect","toast","concat","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","clearError","_jsx","Container","children","_jsxs","onSubmit","type","required","to","RegistrationForm"],"sourceRoot":""}