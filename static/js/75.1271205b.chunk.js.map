{"version":3,"file":"static/js/75.1271205b.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","redux/contacts/contactsSelectors.js","redux/filter/filterSelectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n   width: 300px;\n    border-radius: 8px;\n    background-color: #2c3d50;\n    border: 1px solid #2c3d50;\n    padding: 30px 25px;\n    height: 100%;\n`\nexport const H2 = styled.h2`\n      text-align: center;\n    color: #1abc9c;\n    font-size: 22px;\n    font-weight: 700;\n    margin-bottom:  20px;\n`\nexport const Form = styled.form`\n    display: flex;\n    flex-direction: column;\n`\nexport const Field = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 8px;  \n    margin-bottom: 15px;\n`\nexport const Label = styled.label`\n    font-family: sans-serif;\n    font-size: 14px;\n    font-weight: 700;\n    color: #1abc9c;\n    padding-left: 18px;\n`\nexport const Input = styled.input`\n    border-radius: 35px;\n    border: none;\n    height: 25px;\n    padding-left: 18px;\n    outline: transparent;\n    font-family: sans-serif;\n    font-size: 14px;\n\n    &::placeholder{\n        font-size: 12px;\n    }\n`\nexport const Button = styled.button`\n    padding: 8px 12px;\n    background-color: #1abc9c;\n    color: #fff;\n    border: none;\n    font-family: sans-serif;\n    font-size: 18px;\n    font-weight: 700;\n    transition: background-color .25s cubic-bezier(.4,0,.2,1), color .25s cubic-bezier(.4,0,.2,1);\n    width: 185px;\n    margin: 30px auto 0;\n    border-radius: 35px;\n    cursor: pointer;\n        &:hover{\n            background-color: #fff;\n            color:#1abc9c;\n        }\n`","import { createSelector } from '@reduxjs/toolkit';\n\nimport {selectFilter } from \"../filter/filterSelectors\"\n\nexport const selectContacts = state => state.contacts.contacts;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\n\nexport const selectFilterContacts = createSelector(\n    [selectContacts, selectFilter],\n    (contacts, filter) => {\n      const filteredContacts = contacts.filter(contact => contact.name.toLowerCase().includes(filter));\n      return filteredContacts.sort((a, b) => a.name.localeCompare(b.name));\n    }\n);","export const selectFilter = state => state.filter;\n\n  ","import { useState } from 'react';\nimport { Wrapper, Label, Input, Form, Field, Button, H2 } from \"./ContactForm.styled\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { selectContacts } from '../../redux/contacts/contactsSelectors';\n\nimport { addContact } from \"../../redux/contacts/contactsOperatios\";\n\nconst ContactForm = () => {\n\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectContacts);\n\n  const handleInputChange = (evt) => {\n    if (evt.target.name === 'name') {\n      setName(evt.target.value);\n    } else if (evt.target.name === 'number') {\n      setNumber(evt.target.value);\n    }\n  }\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    const contactData = {\n      name,\n      number,\n    }\n\n    const addedContacts = contacts.find(contact => contact.name === contactData.name);\n    if (addedContacts) {\n      return alert(`${contactData.name} is already in contacts!`);\n    }\n\n    dispatch(addContact(contactData));\n\n    setName('');\n    setNumber('');\n  }\n\n  return (\n    <Wrapper>\n      <H2>Create new contact</H2>\n      <Form onSubmit={handleSubmit}>\n        <Field>\n          <Label htmlFor='user-name'> Name </Label>\n          <Input onChange={handleInputChange} value={name} id='user-name' type=\"text\" name=\"name\" placeholder='Name Lastname' required />\n        </Field>\n        <Field>\n          <Label htmlFor='user-phone'> Phone number </Label>\n          <Input onChange={handleInputChange} value={number} id='user-phone' type=\"tel\" name=\"number\" placeholder='xxx-xx-xx' required />\n        </Field>\n        <Button type='submit'>Add contact</Button>\n      </Form>\n    </Wrapper>\n  )\n}\n\nexport default ContactForm;","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    width: 650px;\n    height: 350px;\n    padding: 40px 0;\n    border-bottom-right-radius: 12px;\n    border-bottom-left-radius: 12px;\n    \n`\nexport const List = styled.ul`\n    display: flex;\n    flex-direction: column;\n    gap: 25px;\n    margin: 0;\n    padding: 0;\n    \n\n`","import styled from \"styled-components\";\n\nexport const Item = styled.li`\n    color: #2c3d50;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    gap: 20px;\n    position: relative;\n`\nexport const Name = styled.p`\n    color: #2c3d50;\n    margin: 0;\n    font-weight: 600;\n    font-size: 22px;\n`\nexport const Number = styled.p`\n    margin: 0;\n    font-weight: 600;\n    font-size: 20px;\n`\nexport const Button = styled.button`\n    cursor: pointer;\n    background-color: tomato;\n    color: #fff;\n    border: 1px solid tomato;\n    padding: 4px;\n    border-radius: 4px;\n    transition: background-color .25s cubic-bezier(.4,0,.2,1), color .25s cubic-bezier(.4,0,.2,1);\n    &:hover{\n            background-color: #fff;\n            color: tomato; \n        }\n`","import { Item, Name, Number, Button } from \"./ContactItem.styled\";\n\nimport { useDispatch } from \"react-redux\";\n\nimport { deleteContact } from \"../../redux/contacts/contactsOperatios\";\n\nconst ContactItem = ({ name, number, id }) => {\n    const dispatch = useDispatch();\n    const handleDelete = () => dispatch(deleteContact(id));\n\n    return (\n\n        <Item>\n            <Name>{name}:</Name>\n            <Number>{number}</Number>\n            <Button onClick={handleDelete} >Delete</Button>\n        </Item>\n    )\n}\nexport default ContactItem;","import { Wrapper, List } from \"./ContactList.styled\";\n\nimport ContactItem from \"components/ContactItem/ContactItem\";\nimport Loader from \"components/Loader/Loader\";\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { fetchContacts } from \"../../redux/contacts/contactsOperatios\";\n\nimport { useEffect } from \"react\";\n\nimport { selectIsLoading, selectFilterContacts } from '../../redux/contacts/contactsSelectors';\n\nconst ContactList = () => {\n    const isLoading = useSelector(selectIsLoading);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    const filterContacts = useSelector(selectFilterContacts);\n\n    return (\n        <>\n            {isLoading && <Loader />}\n            <Wrapper>\n                <List>\n                    {filterContacts.map((contact) =>\n                        <ContactItem\n                            key={contact.id}\n                            id={contact.id}\n                            name={contact.name}\n                            number={contact.number}\n                        />)}\n                </List>\n            </Wrapper>\n        </>\n    )\n}\nexport default ContactList;","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    width: 650px;\n`\nexport const Field = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 8px;  \n    margin-bottom: 20px;\n`\nexport const Input = styled.input`\n    border-radius: 35px;\n    border: 1px solid #2c3d50;\n    height: 35px;\n    padding-left: 18px;\n    outline: transparent;\n    font-family: sans-serif;\n    font-size: 16px;\n`","import { Label } from \"../ContactForm/ContactForm.styled\";\nimport { Wrapper, Field, Input, } from \"./Filter.styled\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { setFilter } from '../../redux/filter/filterSlice';\n\nconst Filter = () => {\n    const dispatch = useDispatch();\n\n    const filter = useSelector(state => state.filter);\n\n    const handleFilter = (evt) => {\n        dispatch(setFilter(evt.currentTarget.value.toLowerCase()));\n    }\n\n    return (\n        <Wrapper>\n            <Field>\n                <Label htmlFor='filter'>  </Label>\n                <Input onChange={handleFilter} value={filter} id='filter' type=\"text\" name=\"filter\" placeholder=\"Find contacts by name\" required />\n            </Field>\n        </Wrapper>\n    )\n\n}\n\nexport default Filter;\n","import { styled } from \"styled-components\";\n\nexport const Wrapper = styled.div`\nmargin-top: 140px;\ndisplay: flex;\n`\nexport const ContactsWrapper = styled.div`\nwidth: 100%;\npadding-left: 70px;\n`\n\nexport const H1 = styled.h1`\n    text-align: center;\n    color: #1abc9c;\n`\nexport const H2 = styled.h2`\n    color: #1abc9c;\n    font-size: 32px;\n    margin-bottom: 20px;\n`","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from \"components/ContactList/ContactList\";\nimport Filter from \"components/Filter/Filter\";\nimport Container from 'components/Container/Container';\n\nimport { H2, Wrapper, ContactsWrapper } from \"./Contacts.styled\";\n\nconst Contacts = () => {\n    return (\n\n        <Container>\n            <Wrapper>\n                <ContactForm />\n                <ContactsWrapper>\n                    <H2>Contacts</H2>\n                    <Filter></Filter>\n                    <ContactList></ContactList>\n                </ContactsWrapper>\n            </Wrapper>\n        </Container>\n\n    )\n}\nexport default Contacts;"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","H2","_templateObject2","Form","_templateObject3","Field","_templateObject4","Label","_templateObject5","Input","_templateObject6","Button","_templateObject7","selectContacts","state","contacts","selectIsLoading","isLoading","selectFilterContacts","createSelector","filter","contact","name","toLowerCase","includes","sort","a","b","localeCompare","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","useSelector","handleInputChange","evt","target","value","_jsxs","children","_jsx","onSubmit","preventDefault","contactData","find","alert","concat","addContact","htmlFor","onChange","id","type","placeholder","required","List","Item","Name","Number","_ref","onClick","deleteContact","useEffect","fetchContacts","filterContacts","_Fragment","Loader","map","ContactItem","setFilter","currentTarget","ContactsWrapper","Container","ContactForm","Filter","ContactList"],"sourceRoot":""}